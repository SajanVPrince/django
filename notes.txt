Django 

* it is a highlevel python frame work
* to relate web frames
* M V T architecture is used in django framework's working
M:- Model (database)
V:- View (request/response)
T:- Template (Folder)HTML files

* Admin interface

* O R M (Obeject Relational Mapping)
    CRUD(Create,Read,Update,Delete)Method is used

* Built in authentication

* Forms(User def forms),(Model forms)

*Security
---------

* Blocks SQLinjuctions in django

# CSRF (cross site request forgery)

# xss (cross site scripting)

Work flow
---------
                                                <-> Model
User <-----> Django <------> urls <-------> view -
                                                <-> Template

# Virtual enviornment(venv)

To create an venv 

in linux
--------

python3 -m venv (envname)

in windows
----------

python -m venv (envname)

#pip( package installer for python)

Activation step of an enviornment
---------------------------------

in linux
--------

sourse/env/bin/activate

in windows
----------

env\Scripts\activate

install django to the enviornment
---------------------------------

pip install django


project creation
----------------

django-admin startproject (project_name)

app creation
------------

py manage.py startapp (app_name)


to make migration to database
-----------------------------

py manage.py makemigrations

***step 2***

py manage.py migrate

to run server
-------------

in linux 
--------

python3 manage.py runserver

in windows 
----------

py manage.py runserver

to start an app in project 
---------------------------

py manage.py startapp app_name

to create a superuser to the auth user(db)
------------------------------------------

py manage.py createsuperuser

****************************************

to connect url of main project to the url of app include is used

from django.urls import path,***include

urlpatterns =[
    path('admin/', admin.site.urls),
    ***path('',include("app.urls")),
]

*******************************************

to connect static files to settings
-----------------------------------

STATICFILES_DIRS = (os.path.join(BASE_DIR,'static'))

to connect Template files to settings
-------------------------------------

DIRS = (os.path.join(BASE_DIR,'template'))

*********to create a model/table use models.py by using class and inherite it with (models.Model)

*********and call it in admin.py by using

from .models import *

admin.site.register(model_name)

to connecct media to settings
-----------------------------

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media)


***************************

if we are using a differnt system the images or files path may change to control this error mention media in 
package urls

*****************************

calling these items at project_file/urls

from django.conf import settings
from django.conf.urls.statics import static

and set a condition

if settings.DEBUG:
    urlspatterns+=static(settings.MEDIA_URL,document_root=settings.MEDIA_ROOT)